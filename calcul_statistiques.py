######################################################################################################################
# Ligne de substitution à la dépendance au programme recuperation_donnees.py 
transposee = [[1701363601, 1701363661, 1701363721, 1701363781, 1701363841, 1701363902, 1701363961, 1701364021, 1701364081, 1701364141, 1701364201, 1701364261, 1701364321, 1701364381, 1701364446, 1701364501, 1701364561, 1701364621, 1701364681, 1701364741, 1701364801, 1701364861, 1701364921, 1701364981, 1701365041, 1701365101, 1701365161, 1701365221, 1701365281, 1701365341, 1701365401, 1701365461, 1701365521, 1701365581, 1701365641, 1701365701, 1701365761, 1701365821, 1701365881, 1701365941, 1701366001, 1701366061, 1701366121, 1701366181, 1701366241, 1701366301, 1701366361, 1701366421, 1701366481, 1701366541, 1701366601, 1701366661, 1701366721, 1701366781, 1701366842, 1701366901, 1701366961, 1701367021, 1701367081, 1701367141, 1701367201, 1701367261, 1701367321, 1701367381, 1701367441, 1701367501, 1701367561, 1701367621, 1701367681, 1701367741, 1701367801, 1701367861, 1701367921, 1701367981, 1701368042, 1701368101, 1701368161, 1701368221, 1701368281, 1701368341, 1701368401, 1701368461, 1701368521, 1701368581, 1701368641, 1701368701, 1701368761, 1701368821, 1701368881, 1701368941, 1701369001, 1701369061, 1701369121, 1701369182, 1701369241, 1701369301, 1701369361, 1701369421, 1701369481, 1701369541, 1701369601, 1701369661, 1701369721, 1701369781, 1701369841, 1701369901, 1701369961, 1701370021, 1701370081, 1701370141, 1701370201, 1701370261, 1701370321, 1701370381, 1701370441, 1701370501, 1701370561, 1701370621, 1701370681, 1701370741, 1701370801, 1701370861, 1701370921, 1701370981, 1701371041, 1701371101, 1701371161, 1701371222, 1701371281, 1701371341, 1701371401, 1701371461, 1701371521, 1701371581, 1701371641, 1701371701, 1701371761, 1701371821, 1701371881, 1701371941, 1701372001, 1701372061, 1701372121, 1701372181, 1701372241, 1701372301, 1701372361, 1701372421, 1701372481, 1701372541, 1701372601, 1701372661, 1701372721, 1701372781, 1701372841, 1701372901, 1701372961, 1701373021, 1701373081, 1701373141, 1701373201, 1701373261, 1701373321, 1701373381, 1701373441, 1701373501, 1701373561, 1701373621, 1701373681, 1701373741, 1701373801, 1701373861, 1701373921, 1701373981, 1701374041, 1701374101, 1701374161, 1701374221, 1701374281, 1701374341, 1701374401, 1701374461, 1701374522, 1701374581, 1701374641, 1701374701, 1701374761, 1701374821, 1701374881, 1701374941, 1701375001, 1701375061, 1701375121, 1701375181, 1701375241, 1701375301, 1701375361, 1701375421, 1701375481, 1701375541, 1701375601, 1701375661, 1701375721, 1701375781, 1701375841, 1701375901, 1701375962, 1701376021, 1701376081, 1701376141, 1701376201, 1701376261, 1701376321, 1701376381, 1701376441, 1701376501, 1701376561, 1701376621, 1701376681, 1701376741, 1701376802, 1701376861, 1701376921, 1701376981, 1701377041, 1701377101, 1701377161, 1701377221, 1701377281, 1701377341, 1701377401, 1701377461, 1701377521, 1701377581, 1701377641, 1701377701, 1701377761, 1701377821, 1701377881, 1701377941, 1701378001, 1701378061, 1701378121, 1701378181, 1701378241, 1701378301, 1701378361, 1701378421, 1701378481, 1701378541, 1701378601, 1701378661, 1701378721, 1701378781, 1701378841, 1701378901, 1701378961, 1701379021, 1701379081, 1701379141, 1701379201, 1701379261, 1701379321, 1701379381, 1701379441, 1701379501, 1701379561, 1701379621, 1701379681, 1701379741, 1701379801, 1701379861, 1701379921, 1701379981, 1701380041, 1701380101, 1701380161, 1701380222, 1701380281, 1701380341, 1701380401, 1701380461, 1701380521, 1701380581, 1701380641, 1701380701, 1701380761, 1701380821, 1701380881, 1701380941, 1701381001, 1701381061, 1701381121, 1701381181, 1701381241, 1701381301, 1701381361, 1701381421, 1701381481, 1701381541, 1701381601, 1701381661, 1701381721, 1701381781, 1701381841, 1701381901, 1701381961, 1701382021, 1701382081, 1701382141, 1701382201, 1701382261, 1701382321, 1701382381, 1701382441, 1701382501, 1701382562, 1701382621, 1701382681, 1701382741, 1701382801, 1701382861, 1701382921, 1701382981, 1701383041, 1701383101, 1701383161, 1701383221, 1701383281, 1701383341, 1701383401, 1701383461, 1701383521, 1701383581, 1701383641, 1701383701, 1701383761, 1701383821, 1701383881, 1701383941, 1701384001, 1701384061, 1701384121, 1701384181, 1701384241, 1701384301, 1701384361, 1701384421, 1701384481, 1701384541, 1701384601, 1701384661, 1701384721, 1701384781, 1701384841, 1701384901, 1701384961, 1701385021, 1701385081, 1701385142, 1701385201, 1701385261, 1701385321, 1701385381, 1701385441, 1701385501, 1701385561, 1701385621, 1701385681, 1701385741, 1701385801, 1701385861, 1701385921, 1701385981, 1701386041, 1701386101, 1701386161, 1701386221, 1701386281, 1701386341, 1701386401, 1701386461, 1701386521, 1701386581, 1701386641, 1701386701, 1701386761, 1701386821, 1701386881, 1701386941, 1701387001, 1701387061, 1701387121, 1701387181, 1701387241, 1701387301, 1701387361, 1701387421, 1701387481, 1701387541, 1701387601, 1701387661, 1701387721, 1701387781, 1701387841, 1701387901, 1701387961, 1701388021, 1701388081, 1701388141, 1701388201, 1701388261, 1701388321, 1701388381, 1701388441, 1701388501, 1701388562, 1701388621, 1701388681, 1701388741, 1701388801, 1701388861, 1701388921, 1701388981, 1701389041, 1701389101, 1701389161, 1701389221, 1701389281, 1701389341, 1701389401, 1701389461, 1701389521, 1701389581, 1701389641, 1701389701, 1701389761, 1701389822, 1701389881, 1701389941, 1701390001, 1701390061, 1701390121, 1701390181, 1701390241, 1701390301, 1701390361, 1701390421, 1701390481, 1701390541, 1701390601, 1701390661, 1701390721, 1701390781, 1701390841, 1701390901, 1701390961, 1701391021, 1701391081, 1701391141, 1701391201, 1701391261, 1701391321, 1701391381, 1701391441, 1701391501, 1701391561, 1701391621, 1701391681, 1701391741, 1701391801, 1701391861, 1701391921, 1701391981, 1701392041, 1701392101, 1701392161, 1701392221, 1701392281, 1701392341, 1701392401, 1701392461, 1701392521, 1701392581, 1701392641, 1701392701, 1701392761, 1701392821, 1701392881, 1701392941, 1701393001, 1701393061, 1701393121, 1701393181, 1701393241, 1701393301, 1701393361, 1701393421, 1701393481, 1701393541, 1701393601, 1701393661, 1701393721, 1701393781, 1701393841, 1701393901, 1701393961, 1701394021, 1701394081, 1701394141, 1701394201, 1701394261, 1701394321, 1701394381, 1701394441, 1701394501, 1701394561, 1701394621, 1701394681, 1701394741, 1701394801, 1701394861, 1701394921, 1701394981, 1701395041, 1701395102, 1701395161, 1701395221, 1701395281, 1701395341, 1701395401, 1701395461, 1701395521, 1701395581, 1701395641, 1701395701, 1701395761, 1701395821, 1701395881, 1701395941, 1701396001, 1701396061, 1701396121, 1701396181, 1701396241, 1701396301, 1701396361, 1701396421, 1701396481, 1701396541, 1701396601, 1701396661, 1701396721, 1701396781, 1701396841, 1701396901, 1701396961, 1701397021, 1701397081, 1701397141, 1701397201, 1701397261, 1701397321, 1701397381, 1701397441, 1701397501, 1701397561, 1701397621, 1701397681, 1701397741, 1701397801, 1701397861, 1701397921, 1701397981, 1701398041, 1701398101, 1701398161, 1701398221, 1701398281, 1701398341, 1701398401, 1701398461, 1701398521, 1701398581, 1701398641, 1701398701, 1701398761, 1701398822, 1701398881, 1701398941, 1701399001, 1701399061, 1701399121, 1701399181, 1701399241, 1701399301, 1701399361, 1701399421, 1701399481, 1701399541, 1701399601, 1701399661, 1701399721, 1701399781, 1701399841, 1701399901, 1701399961, 1701400021, 1701400081, 1701400141, 1701400201, 1701400261, 1701400321, 1701400381, 1701400441, 1701400501, 1701400561, 1701400621, 1701400681, 1701400741, 1701400801, 1701400861, 1701400921, 1701400981, 1701401041, 1701401101, 1701401161, 1701401221, 1701401281, 1701401341, 1701401401, 1701401461, 1701401521, 1701401581, 1701401641, 1701401701, 1701401761, 1701401821, 1701401881, 1701401941, 1701402001, 1701402061, 1701402121, 1701402181, 1701402241, 1701402301, 1701402361, 1701402421, 1701402481, 1701402541, 1701402601, 1701402661, 1701402721, 1701402781, 1701402841, 1701402901, 1701402961, 1701403021, 1701403081, 1701403141, 1701403201, 1701403261, 1701403321, 1701403381, 1701403441, 1701403501, 1701403561, 1701403621, 1701403681, 1701403741, 1701403801, 1701403861, 1701403921, 1701403981, 1701404041, 1701404101, 1701404161, 1701404221, 1701404281, 1701404341, 1701404401, 1701404461, 1701404521, 1701404581, 1701404641, 1701404701, 1701404761, 1701404821, 1701404881, 1701404941, 1701405001, 1701405061, 1701405121, 1701405181, 1701405241, 1701405301, 1701405361, 1701405421, 1701405481, 1701405541, 1701405601, 1701405661, 1701405721, 1701405781, 1701405841, 1701405901, 1701405961, 1701406021, 1701406081, 1701406141, 1701406201, 1701406261, 1701406321, 1701406381, 1701406441, 1701406501, 1701406561, 1701406621, 1701406681, 1701406741, 1701406801, 1701406861, 1701406921, 1701406981, 1701407041, 1701407101, 1701407161, 1701407221, 1701407281, 1701407341, 1701407401, 1701407461, 1701407521, 1701407581, 1701407641, 1701407701, 1701407761, 1701407821, 1701407881, 1701407941, 1701408001, 1701408061, 1701408121, 1701408181, 1701408241, 1701408301, 1701408361, 1701408421, 1701408481, 1701408541, 1701408601, 1701408661, 1701408721, 1701408781, 1701408841, 1701408901, 1701408961, 1701409021, 1701409081, 1701409141, 1701409201, 1701409261, 1701409321, 1701409381, 1701409441, 1701409501, 1701409561, 1701409621, 1701409681, 1701409741, 1701409801, 1701409861, 1701409921, 1701409981, 1701410041, 1701410101, 1701410161, 1701410221, 1701410281, 1701410341, 1701410401, 1701410461, 1701410521, 1701410581, 1701410641, 1701410701, 1701410761, 1701410821, 1701410881, 1701410941, 1701411001, 1701411061, 1701411121, 1701411181, 1701411241, 1701411301, 1701411361, 1701411421, 1701411481, 1701411541, 1701411601, 1701411661, 1701411721, 1701411781, 1701411841, 1701411901, 1701411961, 1701412021, 1701412081, 1701412141, 1701412201, 1701412261, 1701412321, 1701412381, 1701412441, 1701412501, 1701412561, 1701412621, 1701412681, 1701412741, 1701412801, 1701412861, 1701412921, 1701412981, 1701413041, 1701413101, 1701413161, 1701413221, 1701413281, 1701413341, 1701413401, 1701413461], [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [3, 3, 2, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 3, 4, 4, 4, 4, 3, 3, 2, 2, 2, 3, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 3, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 4, 3, 2, 3, 2, 2, 2, 2, 2, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 3, 2, 2, 2, 2, 2, 3, 3, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 2, 3, 3, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 2, 2, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 3, 4, 4, 4, 4, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 3, 3, 4, 3, 3, 3, 4, 4, 4, 4, 4, 3, 4, 4, 3, 3, 3, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 3, 2, 3, 4, 4, 4, 4, 4, 3, 4, 3, 3, 4, 3, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 3, 2, 2, 3, 4, 4, 4, 3, 2, 3, 3, 3, 3, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 3, 4, 3, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 2, 2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 4, 3, 2, 2, 3, 3, 3, 3, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 3, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 3, 4, 3, 3, 3, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 1, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 1, 2, 3, 3, 2, 2, 2, 2, 3, 3, 2, 3, 3, 3, 2, 2], [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0, 1, 1, 2, 2, 2, 1, 2, 2, 3, 2, 2, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 2, 2, 2, 2, 2, 1, 1, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 2, 2, 1, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 1, 0, 1, 2, 2, 2, 3, 3, 3, 2, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 0, 0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 3, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], ['10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.2.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '', '', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.2.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '', '10.0.255.254', '10.1.255.254', '10.2.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.2.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.1.255.254', '', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '', '', '', '', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.0.255.254', '10.2.255.254', '10.1.255.254', '10.2.255.254', '', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '', '10.1.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.2.255.254', '', '', '', '10.2.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '', '10.2.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.0.255.254', '', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '', '10.2.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '', '', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '', '', '', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '', '', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '', '', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '', '', '10.2.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '', '', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.2.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '', '', '10.1.255.254', '10.2.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.1.255.254', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.2.255.254', '10.1.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.2.255.254', '10.1.255.254', '10.1.255.254', '', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.1.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '', '', '', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '', '10.2.255.254', '10.1.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '', '10.2.255.254', '10.1.255.254', '10.1.255.254', '10.2.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.1.255.254', '10.1.255.254', '', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.2.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '', '', '', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '', '10.1.255.254', '10.2.255.254', '10.1.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.1.255.254', '10.0.255.254', '', '10.2.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.2.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '', '', '', '', '10.2.255.254', '10.1.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '', '10.2.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '', '10.0.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.0.255.254', '10.2.255.254', '', '', '', '', '', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '', '10.0.255.254', '10.1.255.254', '10.2.255.254', '10.2.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '', '', '10.1.255.254', '10.0.255.254', '10.0.255.254', '10.2.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '10.1.255.254', '', '', '10.2.255.254', '10.0.255.254', '10.0.255.254', '10.0.255.254', '10.1.255.254', '10.0.255.254', '10.0.255.254'], ['18:00', '18:01', '18:02', '18:03', '18:04', '18:05', '18:06', '18:07', '18:08', '18:09', '18:10', '18:11', '18:12', '18:13', '18:14', '18:15', '18:16', '18:17', '18:18', '18:19', '18:20', '18:21', '18:22', '18:23', '18:24', '18:25', '18:26', '18:27', '18:28', '18:29', '18:30', '18:31', '18:32', '18:33', '18:34', '18:35', '18:36', '18:37', '18:38', '18:39', '18:40', '18:41', '18:42', '18:43', '18:44', '18:45', '18:46', '18:47', '18:48', '18:49', '18:50', '18:51', '18:52', '18:53', '18:54', '18:55', '18:56', '18:57', '18:58', '18:59', '19:00', '19:01', '19:02', '19:03', '19:04', '19:05', '19:06', '19:07', '19:08', '19:09', '19:10', '19:11', '19:12', '19:13', '19:14', '19:15', '19:16', '19:17', '19:18', '19:19', '19:20', '19:21', '19:22', '19:23', '19:24', '19:25', '19:26', '19:27', '19:28', '19:29', '19:30', '19:31', '19:32', '19:33', '19:34', '19:35', '19:36', '19:37', '19:38', '19:39', '19:40', '19:41', '19:42', '19:43', '19:44', '19:45', '19:46', '19:47', '19:48', '19:49', '19:50', '19:51', '19:52', '19:53', '19:54', '19:55', '19:56', '19:57', '19:58', '19:59', '20:00', '20:01', '20:02', '20:03', '20:04', '20:05', '20:06', '20:07', '20:08', '20:09', '20:10', '20:11', '20:12', '20:13', '20:14', '20:15', '20:16', '20:17', '20:18', '20:19', '20:20', '20:21', '20:22', '20:23', '20:24', '20:25', '20:26', '20:27', '20:28', '20:29', '20:30', '20:31', '20:32', '20:33', '20:34', '20:35', '20:36', '20:37', '20:38', '20:39', '20:40', '20:41', '20:42', '20:43', '20:44', '20:45', '20:46', '20:47', '20:48', '20:49', '20:50', '20:51', '20:52', '20:53', '20:54', '20:55', '20:56', '20:57', '20:58', '20:59', '21:00', '21:01', '21:02', '21:03', '21:04', '21:05', '21:06', '21:07', '21:08', '21:09', '21:10', '21:11', '21:12', '21:13', '21:14', '21:15', '21:16', '21:17', '21:18', '21:19', '21:20', '21:21', '21:22', '21:23', '21:24', '21:25', '21:26', '21:27', '21:28', '21:29', '21:30', '21:31', '21:32', '21:33', '21:34', '21:35', '21:36', '21:37', '21:38', '21:39', '21:40', '21:41', '21:42', '21:43', '21:44', '21:45', '21:46', '21:47', '21:48', '21:49', '21:50', '21:51', '21:52', '21:53', '21:54', '21:55', '21:56', '21:57', '21:58', '21:59', '22:00', '22:01', '22:02', '22:03', '22:04', '22:05', '22:06', '22:07', '22:08', '22:09', '22:10', '22:11', '22:12', '22:13', '22:14', '22:15', '22:16', '22:17', '22:18', '22:19', '22:20', '22:21', '22:22', '22:23', '22:24', '22:25', '22:26', '22:27', '22:28', '22:29', '22:30', '22:31', '22:32', '22:33', '22:34', '22:35', '22:36', '22:37', '22:38', '22:39', '22:40', '22:41', '22:42', '22:43', '22:44', '22:45', '22:46', '22:47', '22:48', '22:49', '22:50', '22:51', '22:52', '22:53', '22:54', '22:55', '22:56', '22:57', '22:58', '22:59', '23:00', '23:01', '23:02', '23:03', '23:04', '23:05', '23:06', '23:07', '23:08', '23:09', '23:10', '23:11', '23:12', '23:13', '23:14', '23:15', '23:16', '23:17', '23:18', '23:19', '23:20', '23:21', '23:22', '23:23', '23:24', '23:25', '23:26', '23:27', '23:28', '23:29', '23:30', '23:31', '23:32', '23:33', '23:34', '23:35', '23:36', '23:37', '23:38', '23:39', '23:40', '23:41', '23:42', '23:43', '23:44', '23:45', '23:46', '23:47', '23:48', '23:49', '23:50', '23:51', '23:52', '23:53', '23:54', '23:55', '23:56', '23:57', '23:58', '23:59', '00:00', '00:01', '00:02', '00:03', '00:04', '00:05', '00:06', '00:07', '00:08', '00:09', '00:10', '00:11', '00:12', '00:13', '00:14', '00:15', '00:16', '00:17', '00:18', '00:19', '00:20', '00:21', '00:22', '00:23', '00:24', '00:25', '00:26', '00:27', '00:28', '00:29', '00:30', '00:31', '00:32', '00:33', '00:34', '00:35', '00:36', '00:37', '00:38', '00:39', '00:40', '00:41', '00:42', '00:43', '00:44', '00:45', '00:46', '00:47', '00:48', '00:49', '00:50', '00:51', '00:52', '00:53', '00:54', '00:55', '00:56', '00:57', '00:58', '00:59', '01:00', '01:01', '01:02', '01:03', '01:04', '01:05', '01:06', '01:07', '01:08', '01:09', '01:10', '01:11', '01:12', '01:13', '01:14', '01:15', '01:16', '01:17', '01:18', '01:19', '01:20', '01:21', '01:22', '01:23', '01:24', '01:25', '01:26', '01:27', '01:28', '01:29', '01:30', '01:31', '01:32', '01:33', '01:34', '01:35', '01:36', '01:37', '01:38', '01:39', '01:40', '01:41', '01:42', '01:43', '01:44', '01:45', '01:46', '01:47', '01:48', '01:49', '01:50', '01:51', '01:52', '01:53', '01:54', '01:55', '01:56', '01:57', '01:58', '01:59', '02:00', '02:01', '02:02', '02:03', '02:04', '02:05', '02:06', '02:07', '02:08', '02:09', '02:10', '02:11', '02:12', '02:13', '02:14', '02:15', '02:16', '02:17', '02:18', '02:19', '02:20', '02:21', '02:22', '02:23', '02:24', '02:25', '02:26', '02:27', '02:28', '02:29', '02:30', '02:31', '02:32', '02:33', '02:34', '02:35', '02:36', '02:37', '02:38', '02:39', '02:40', '02:41', '02:42', '02:43', '02:44', '02:45', '02:46', '02:47', '02:48', '02:49', '02:50', '02:51', '02:52', '02:53', '02:54', '02:55', '02:56', '02:57', '02:58', '02:59', '03:00', '03:01', '03:02', '03:03', '03:04', '03:05', '03:06', '03:07', '03:08', '03:09', '03:10', '03:11', '03:12', '03:13', '03:14', '03:15', '03:16', '03:17', '03:18', '03:19', '03:20', '03:21', '03:22', '03:23', '03:24', '03:25', '03:26', '03:27', '03:28', '03:29', '03:30', '03:31', '03:32', '03:33', '03:34', '03:35', '03:36', '03:37', '03:38', '03:39', '03:40', '03:41', '03:42', '03:43', '03:44', '03:45', '03:46', '03:47', '03:48', '03:49', '03:50', '03:51', '03:52', '03:53', '03:54', '03:55', '03:56', '03:57', '03:58', '03:59', '04:00', '04:01', '04:02', '04:03', '04:04', '04:05', '04:06', '04:07', '04:08', '04:09', '04:10', '04:11', '04:12', '04:13', '04:14', '04:15', '04:16', '04:17', '04:18', '04:19', '04:20', '04:21', '04:22', '04:23', '04:24', '04:25', '04:26', '04:27', '04:28', '04:29', '04:30', '04:31', '04:32', '04:33', '04:34', '04:35', '04:36', '04:37', '04:38', '04:39', '04:40', '04:41', '04:42', '04:43', '04:44', '04:45', '04:46', '04:47', '04:48', '04:49', '04:50', '04:51', '04:52', '04:53', '04:54', '04:55', '04:56', '04:57', '04:58', '04:59', '05:00', '05:01', '05:02', '05:03', '05:04', '05:05', '05:06', '05:07', '05:08', '05:09', '05:10', '05:11', '05:12', '05:13', '05:14', '05:15', '05:16', '05:17', '05:18', '05:19', '05:20', '05:21', '05:22', '05:23', '05:24', '05:25', '05:26', '05:27', '05:28', '05:29', '05:30', '05:31', '05:32', '05:33', '05:34', '05:35', '05:36', '05:37', '05:38', '05:39', '05:40', '05:41', '05:42', '05:43', '05:44', '05:45', '05:46', '05:47', '05:48', '05:49', '05:50', '05:51', '05:52', '05:53', '05:54', '05:55', '05:56', '05:57', '05:58', '05:59', '06:00', '06:01', '06:02', '06:03', '06:04', '06:05', '06:06', '06:07', '06:08', '06:09', '06:10', '06:11', '06:12', '06:13', '06:14', '06:15', '06:16', '06:17', '06:18', '06:19', '06:20', '06:21', '06:22', '06:23', '06:24', '06:25', '06:26', '06:27', '06:28', '06:29', '06:30', '06:31', '06:32', '06:33', '06:34', '06:35', '06:36', '06:37', '06:38', '06:39', '06:40', '06:41', '06:42', '06:43', '06:44', '06:45', '06:46', '06:47', '06:48', '06:49', '06:50', '06:51', '06:52', '06:53', '06:54', '06:55', '06:56', '06:57', '06:58', '06:59', '07:00', '07:01', '07:02', '07:03', '07:04', '07:05', '07:06', '07:07', '07:08', '07:09', '07:10', '07:11', '07:12', '07:13', '07:14', '07:15', '07:16', '07:17', '07:18', '07:19', '07:20', '07:21', '07:22', '07:23', '07:24', '07:25', '07:26', '07:27', '07:28', '07:29', '07:30', '07:31', '07:32', '07:33', '07:34', '07:35', '07:36', '07:37', '07:38', '07:39', '07:40', '07:41', '07:42', '07:43', '07:44', '07:45', '07:46', '07:47', '07:48', '07:49', '07:50', '07:51']]
######################################################################################################################


# calcul_statistiques.py
# Ce programme permet de calculer des statistiques à partir des données rendues utilisables par le programme recuperation_donnees.py.
# Écrit par Yann Plougonven--Lastennet et Gurvan Mury,
# élèves en BUT réseaux et télécommunications à l'IUT de Lannion.
# Dernière édition de ce fichier le 05/01/2024 par Yann.

### Importation des modules ###
import math

### Fonctions utilisées pour le calcul des statistiques ###

def valeur_min(liste: list[float]) -> float:
    """Calcule et retourne le nombre le plus petit de la liste passée en paramètre.

    Args:
        liste (list[float]): liste de nombres

    Returns:
        float: nombre le plus petit de la liste passée en paramètres
    """
    i : int = 0
    mini : float = liste[i]
    for i in range(1, len(liste)):
        if liste[i] < mini:
            mini = liste[i]
    return mini

assert valeur_min([1, 2, 3, 4, 2]) == 1
assert valeur_min([10, 20, 3, 40, 28]) == 3
assert valeur_min([10.2, -1.2, 3, 40, 2]) == -1.2
assert valeur_min([-10.2, -1.2, 3, 40, 2]) == -10.2


def valeur_max(liste: list[float]) -> float:
    """Calcule et retourne le nombre le plus grand de la liste passée en paramètre.

    Args:
        liste (list[int]): liste de nombres

    Returns:
        int: nombre le plus grand de la liste passée en paramètres
    """
    i : int = 0
    maxi: float = liste[i]
    for i in range(1, len(liste)):
        if liste[i] > maxi:
            maxi = liste[i]
    return maxi

assert valeur_max([1, 2, 3, 4, 2]) == 4
assert valeur_max([10, 20, 3, 40, 28]) == 40
assert valeur_max([10.2, -1.2, 3, 40, 2]) == 40
assert valeur_max([-10.2, -1.2, -3, -40, -2]) == -1.2


def valeur_moyenne(liste : list[int]) -> int:
    """Calcule et retourne la valeur moyenne des nombres d'une liste.

    Args:
        liste (list[int]): liste de nombres.

    Returns:
        int: moyenne des nombres contenus dans la liste passée en paramètre.
    """
    i : int
    somme : float = 0
    for i in range(len(liste)):
        somme += liste[i]
    return somme / len(liste)

assert valeur_moyenne([0, 20]) == 10
assert valeur_moyenne([-10, 0, 10]) == 0
assert valeur_moyenne([-4, -2]) == -3


def valeur_mediane(valeurs: list[float]) -> float:
    """Calcule et retourne la valeur médiane des nombres d'une liste.

    Args:
        valeurs (list[float]): liste de nombres.

    Returns:
        float: médiane des nombres contenus dans la liste passée en paramètre.
    """
    mediane : float
    copie_valeurs : list[float] = valeurs.copy() # Python nous oblige à travailler avec une copie des données, 
    # sinon la liste "transposee" serait également modifiée par le .sort(), ce qui fausserait les résultats suivants.
    copie_valeurs.sort() # tri de la liste de valeurs

    if len(copie_valeurs) % 2 != 0:
        mediane = copie_valeurs[len(copie_valeurs)//2]
    else:
        mediane = valeur_moyenne([copie_valeurs[len(copie_valeurs)//2], copie_valeurs[len(copie_valeurs)//2 - 1]])
        
    return mediane

assert valeur_mediane([1, 2, 3, 4, 5]) == 3
assert valeur_mediane([0, 20]) == 10
assert valeur_mediane([0, 21]) == 10.5
assert valeur_mediane([-72, 0, 20, 52]) == 10
assert valeur_mediane([52, 0, -72, 20]) == 10

def valeur_variance(valeurs: list[float]) -> float:
    """Calcule et retourne la valeur de la variance d'une liste de valeurs.
    La variance est une mesure de la dispersion des valeurs d'un échantillon statistique ou d'une distribution de probabilité.

    Args:
        valeurs (list[float]): liste de nombres.

    Returns:
        float: valeur de la variance des nombres contenus dans la liste passée en paramètre.
    """
    i : int
    moyenne : float = valeur_moyenne(valeurs)
    somme : float = 0
    for i in range(len(valeurs)):
        somme += (valeurs[i] - moyenne)**2
    return somme / len(valeurs)

assert valeur_variance([0, 20]) == 100
assert valeur_variance([1, 2]) == 0.25
assert valeur_variance([0, 10, 20, 30]) == 125


def valeur_ecart_type(valeurs: list[float]) -> float:
    """Calcule et retourne la valeur de l'écart type d'une liste de valeurs.
    L'écart type est une mesure de la dispersion des valeurs d'un échantillon statistique ou d'une distribution de probabilité.

    Args:
        valeurs (list[float]): liste de nombres.

    Returns:
        float: valeur de l'écart type des nombres contenus dans la liste passée en paramètre.
    """
    return math.sqrt(valeur_variance(valeurs))

assert valeur_ecart_type([0, 20]) == 10
assert valeur_ecart_type([20, 0]) == 10
assert valeur_ecart_type([10, 0]) == 5


def get_time_in_each_network(donnees : list[str]) -> dict[str, int]:
    """Calcule et retourne le temps que l'ordinateur a passé dans chaque réseau, sachant que chaque ligne du fichier csv correspond à une minute de temps.

    Args:
        donnees (list[str]): liste contenant les routes par défaut de la machine, capturées chaque minute.

    Returns:
        dict[str, int]: dictionnaire indiquant le temps passé par l'ordinateur sur chaque route par défaut, donc sur chaque réseau.
    """
    route : str
    resultat : dict[str, int] = {"time_in_dot0":0, "time_in_dot1":0, "time_in_dot2":0, "time_with_no_road":0}
    
    for route in donnees:
        if route == "10.0.255.254":
            resultat["time_in_dot0"] += 1
        if route == "10.1.255.254":
            resultat["time_in_dot1"] += 1
        if route == "10.2.255.254":
            resultat["time_in_dot2"] += 1
        if route == "":
            resultat["time_with_no_road"] += 1

    return resultat


def get_time_in_each_network_by_hour(donnees : list[str], liste_heures : list[int]) -> list[dict[str:int, str:int, str:int, str:int, str:str]]:
    """Calcule et retourne le temps (nombre de minutes) que l'ordinateur a passé CHAQUE HEURE dans chaque réseau, sachant que chaque ligne du fichier csv correspond à une minute de temps.

    Args:
        donnees (list[str]): liste contenant les routes par défaut de la machine, capturées chaque minute.
        liste_heures (list[int]): liste contenant l'heure (toutes les 60 minutes) de capture de chaque route par défaut de la liste "donnees".

    Returns:
        list[dict[str:int, str:int, str:int, str:int, str:str]]: liste de dictionnaires indiquant le temps passé par l'ordinateur sur chaque route par défaut, donc sur chaque réseau.
        Un dictionnaire correspond à une heure (60 minutes)
    """
    start : int = 0
    end : int = 60
    i : int
    dico : list[dict[str:int, str:int, str:int, str:int, str:str]] = {}
    resultat : list[list[dict[str:int, str:int, str:int, str:int, str:str]]] = []

    for i in range(len(liste_heures)//60 + 1):
        dico = get_time_in_each_network(donnees[start:end]) # ajout des durées de chaque route par défaut au dico
        dico["hour"] = liste_heures[0 + start] # ajout de l'heure au dico
        resultat.append(dico) # ajout du dico à la liste qui sera retournée
        start += 60
        end += 60

    return resultat


### Statistiques pour le nombre d'interfaces ###

moyenne_nb_int = valeur_moyenne(transposee[1])
#print(f"moyenne_nb_int : {moyenne_nb_int}")

max_nb_int = valeur_max(transposee[1])
#print(f"max_nb_int : {max_nb_int}")

min_nb_int = valeur_min(transposee[1])
#print(f"min_nb_int : {min_nb_int}")

mediane_nb_int = valeur_mediane(transposee[1])
#print(f"mediane_nb_int : {mediane_nb_int}")

variance_nb_int = valeur_variance(transposee[1])
#print(f"variance_nb_int : {variance_nb_int}")

ecart_type_nb_int = valeur_ecart_type(transposee[1])
#print(f"ecart_type_nb_int : {ecart_type_nb_int}")


### Statistiques pour le nombre d'interfaces UP ###

moyenne_nb_int_up = valeur_moyenne(transposee[2])
#print(f"moyenne_nb_int_up : {moyenne_nb_int_up}")

max_nb_int_up = valeur_max(transposee[2])
#print(f"max_nb_int_up : {max_nb_int_up}")

min_nb_int_up = valeur_min(transposee[2])
#print(f"min_nb_int_up : {min_nb_int_up}")

mediane_nb_int_up = valeur_mediane(transposee[2])
#print(f"mediane_nb_int_up : {mediane_nb_int_up}")

variance_nb_int_up = valeur_variance(transposee[2])
#print(f"variance_nb_int_up : {variance_nb_int_up}")

ecart_type_nb_int_up = valeur_ecart_type(transposee[2])
#print(f"ecart_type_nb_int_up : {ecart_type_nb_int_up}")


### Statistiques pour le nombre d'interfaces DOWN ###

moyenne_nb_int_down = valeur_moyenne(transposee[3])
#print(f"moyenne_nb_int_down : {moyenne_nb_int_down}")

max_nb_int_down = valeur_max(transposee[3])
#print(f"max_nb_int_down : {max_nb_int_down}")

min_nb_int_down = valeur_min(transposee[3])
#print(f"min_nb_int_down : {min_nb_int_down}")

mediane_nb_int_down = valeur_mediane(transposee[3])
#print(f"mediane_nb_int_down : {mediane_nb_int_down}")

variance_nb_int_down = valeur_variance(transposee[3])
#print(f"variance_nb_int_down : {variance_nb_int_down}")

ecart_type_nb_int_down = valeur_ecart_type(transposee[3])
#print(f"ecart_type_nb_int_down : {ecart_type_nb_int_down}")


### Statistiques pour le nombre d'interfaces UNKNOW ###

moyenne_nb_int_unknow = valeur_moyenne(transposee[4])
#print(f"moyenne_nb_int_unknow : {moyenne_nb_int_unknow}")

max_nb_int_unknow = valeur_max(transposee[4])
#print(f"max_nb_int_unknow : {max_nb_int_unknow}")

min_nb_int_unknow = valeur_min(transposee[4])
#print(f"min_nb_int_unknow : {min_nb_int_unknow}")

mediane_nb_int_unknow = valeur_mediane(transposee[4])
#print(f"mediane_nb_int_unknow : {mediane_nb_int_unknow}")

variance_nb_int_unknow = valeur_variance(transposee[4])
#print(f"variance_nb_int_unknow : {variance_nb_int_unknow}")

ecart_type_nb_int_unknow = valeur_ecart_type(transposee[4])
#print(f"ecart_type_nb_int_unknow : {ecart_type_nb_int_unknow}")


### Stockage des statistiques relatives aux interfaces dans un dictionnaire ###

stats_interfaces : dict = {"moyenne_nb_int":moyenne_nb_int, "max_nb_int":max_nb_int, "min_nb_int":min_nb_int,
                            "mediane_nb_int":mediane_nb_int, "variance_nb_int":variance_nb_int, "ecart_type_nb_int":ecart_type_nb_int,
                            "moyenne_nb_int_up":moyenne_nb_int_up, "max_nb_int_up":max_nb_int_up, "min_nb_int_up":min_nb_int_up,
                            "mediane_nb_int_up":mediane_nb_int_up, "variance_nb_int_up":variance_nb_int_up, "ecart_type_nb_int_up":ecart_type_nb_int_up,
                            "moyenne_nb_int_down":moyenne_nb_int_down, "max_nb_int_down":max_nb_int_down, "min_nb_int_down":min_nb_int_down,
                            "mediane_nb_int_down":mediane_nb_int_down, "variance_nb_int_down":variance_nb_int_down, "ecart_type_nb_int_down":ecart_type_nb_int_down,
                            "moyenne_nb_int_unknow":moyenne_nb_int_unknow, "max_nb_int_unknow":max_nb_int_unknow, "min_nb_int_unknow":min_nb_int_unknow,
                            "mediane_nb_int_unknow":mediane_nb_int_unknow, "variance_nb_int_unknow":variance_nb_int_unknow, "ecart_type_nb_int_unknow":ecart_type_nb_int_unknow
                            }
print(f"stats_interfaces : {stats_interfaces}")


### Statistiques pour les routes par défaut ###

time_in_each_network = get_time_in_each_network(transposee[5])
print(f"\ntime_in_each_network : {time_in_each_network}")

time_in_each_network_by_hour = get_time_in_each_network_by_hour(transposee[5], transposee[6])
print(f"\ntime_in_each_network_by_hour : {time_in_each_network_by_hour}")